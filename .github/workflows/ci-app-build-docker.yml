name: "üèó Build Staging"
on:
  push:
    branches: [main]

jobs:
  build-backend:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: "Build backend"
    environment: staging
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üèó Install dependencies
        run: yarn

      - name: Build app
        run: yarn build
        env:
          APP_KEYS: ${{ secrets.APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Login to docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.BACKEND_IMAGE_NAME }}:latest

  build-frontend:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: "Build frontend"
    environment: staging
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üèó Install dependencies
        run: npm install --legacy-peer-deps

      - name: ‚úí Check linting / formatting
        run: npm run lint --if-present

      - name: Build app
        run: npm run build
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Login to docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
